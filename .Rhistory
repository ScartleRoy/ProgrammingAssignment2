5*4+4*10/3+4*3+2*3.33+4+4*11/3+2*3+2*7+2*10/3+8*10/3+3+2*8/3+4+4*3+2*7/3+2*8/3+3*7/3+7*3+3+3*11/3+2*10/3+9+7*10/3+6+4+9*10/3+6*3+3*4+2*3
315.3267/98
315.3267+16
331.3267/102
0.75*(1+0.39/100*50) + 0.25*(1+4.82/100*50)
0.75*(1+1.35*50/100) + 0.25*(2+1.35*50/100)
4+1.2*1.4*0.8
install.package(KernSmooth)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
install.packages("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1, 2, 3, 4) + c(0, 10, 100)
z * 2 + 1000
my_div
1:20
pi:10
15:1
?:
?':'
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,`0,length=30)
d
)
''
''
')'
')
sd
quit
',length = 40)
sdf
library(swirl)
swril()
swirl()
my_seq <- seq(5, 10, length = 30)
length(my_seq)
1:length(my_seq)
seq(along=my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
ft <- num_vect < 1
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
ny_name <- c(my_char, "Scartle Roy")
my_name <- c(my_char, "Scartle Roy")
ny_nam
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf -Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vec)
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector = 1:20
my_vect <- 1:20
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
swirl()
x <- rep(1,each = 3)
x
x <- rep(c(1,2), each = 3)
x
help(rep)
x <- rep(1:4, each = 2, times = 3)
x
x <- rep(1:4, times = 3)
x
clear
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
?seq_along
seq(1, 6, by = 3)
seq(2)
seq_len(2)
args(paste)
paste("a","b","c","d:,sep = " "")
paste("a","b","c","d",sep = " )
")"
paste("a","b","c","d",sep = " ")
y<-10f <- function(x) { y<-2                   y^2 + g(x)}g <- function(x) { x*y}
y<-10
f <- function(x) { y<-2
y^2 + g(x)
}
g <- function(x) { x*y
}
f(3)
?unclass
?POSIXlt
x <- sys.time()
x <- Sys.time()
p <- as.POSIXlt(x)
names(p)
names(unclass(p))
unclass(p)
p$wdays
p$way
p$wday
?runif
library(datasets)
data(iris)
iris
sapply(iris, mean)
sapply(iris$Sepal.Length[iris$Species == "virginica"], mean)
mean(iris$Sepal.Length[iris$Species == "virginica"])
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], mean)
?apply
library(datasets)
data(mtcars)
?mtcars
head(mtcars)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429-82.63636
debug(ls)
ls
?ls
ls(pattern = "O")
>rowMeans
?rowMeans
a <- array(rnorm(2 * 2 * 10), c(2, 2, 10))
a
rowMeans(a, dims = 2)
rowMeans(a, dims = 1)
rowMeans(a, dims = 3)
rowMeans(a, dims = 0)
rowMeans(a, dims = 1)
?gl
x <- 3
y <<- x
y
x <- matrix(rep(3,10), 2, 5)
x
y <<- x
y
?<-
?'<-'
y <- matrix(rep(3,10), 2, 5)
solve(y)
y <- matrix(rep(3, 9), 3, 3)
solve(y)
y <- matrix(c(1,2,3,4,5,6,7,8,9), 3, 3)
solve(y)
y
y <- matrix(c(1,2,3,4,5,6,7,6,4), 3, 3)
solve(y)
y %*% solve(y)
y * solve(y)
setwd("~/Git-repo/ProgrammingAssignment2")
source("cachematrix.R")
cacheSolve(y)
y
makeCachedMatrix(y)
makeCacheMatrix
makeCacheMatrix(y)
z <- makeCacheMatrix(y)
cacheSolec(y)
cacheSolve(y)
cacheSolve(z)
source("cachematrix.R")
cacheSolve(z)
z <- makeCacheMatrix(y)
cacheSolve(z)
y
